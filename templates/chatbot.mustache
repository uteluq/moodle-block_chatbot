<!--
  @copyright 2025 Université TÉLUQ
-->

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>{{#str}}chatbot_with_toggle_buttons, block_chatbot{{/str}}</title>
    <style>
    .block-chatbot-container {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        height: 500px;
        margin: 0 auto;
        overflow: hidden;
        position: relative;
        width: 100%;
        max-width: 1000px;
    }

    .chat-messages {
        flex-grow: 1;
        overflow-y: auto;
        padding: 20px;
        scrollbar-width: thin;
        scrollbar-color: #6366F1 #f1f5f9;
    }

    .chat-messages::-webkit-scrollbar {
        width: 6px;
    }

    .chat-messages::-webkit-scrollbar-track {
        background: #f1f5f9;
    }

    .chat-messages::-webkit-scrollbar-thumb {
        background-color: #6366F1;
        border-radius: 3px;
    }

    .message {
        border-radius: 15px;
        margin: 8px 0;
        max-width: 85%;
        padding: 12px 16px;
        position: relative;
        word-wrap: break-word;
    }

    .user-message {
        background: #6366F1;
        color: white;
        margin-left: auto;
    }

    .bot-message {
        background: #f1f5f9;
        color: #1e293b;
        margin-right: auto;
    }

    .welcome-message {
        display: flex;
        align-items: flex-start;
        margin-bottom: 16px;
    }

    .bot-avatar {
        margin-right: 8px;
        margin-top: 4px;
    }

    .error-message {
        color: #ef4444;
        font-size: 0.875rem;
        margin: 8px 16px;
        text-align: center;
    }

    .chat-input-container {
        background: #ffffff;
        border-top: 1px solid #e2e8f0;
        padding: 5px;
        display: flex;
        flex-direction: column;
    }

    .chat-form {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 8px;
    }

    .chat-input {
        background: #f8fafc;
        border: 1px solid #e2e8f0;
        border-radius: 24px;
        flex-grow: 1;
        font-size: 0.95rem;
        padding: 2px 2px;
        transition: border-color 0.2s;
        height: 42px;
        box-sizing: border-box;
        max-width: calc(100% - 54px);
    }

    .chat-input:focus {
        border-color: #6366F1;
        outline: none;
        box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
    }

    .send-button {
        background: #6366F1;
        border: none;
        border-radius: 50%;
        color: white;
        cursor: pointer;
        height: 42px;
        width: 42px;
        min-width: 42px;
        padding: 0;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        position: relative;
        margin-left: auto;
    }

    .send-button:hover {
        background: #4f46e5;
    }

    .send-button svg {
        width: 20px;
        height: 20px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .button-container {
        display: flex;
        justify-content: flex-end;
        margin-top: 8px;
        flex-wrap: wrap;
        gap: 8px;
    }

    .toggle-buttons-checkbox {
        display: flex;
        align-items: center;
        margin-right: 16px;
        font-size: 0.875rem;
        color: #64748b;
    }

    .toggle-buttons-checkbox input[type="checkbox"] {
        margin-right: 8px;
    }

    .prompt-button, .file-upload-button {
        background: #f8fafc;
        border: 1px solid #e2e8f0;
        border-radius: 24px;
        color: #64748b;
        cursor: pointer;
        font-size: 0.875rem;
        padding: 8px 16px;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        gap: 6px;
        white-space: nowrap;
    }

    .prompt-button {
        margin-right: 8px;
    }

    .prompt-button:hover, .file-upload-button:hover {
        background: #f1f5f9;
        color: #4f46e5;
    }

    @media (max-width: 640px) {
        .block-chatbot-container {
            height: 400px;
            max-width: 95%;
        }

        .message {
            max-width: 90%;
        }

        .chat-form {
            gap: 8px;
        }

        .chat-input {
            max-width: calc(100% - 50px);
        }

        .send-button {
            height: 42px;
            width: 42px;
            min-width: 42px;
        }

        .button-container {
            justify-content: space-between;
        }

        .prompt-button, .file-upload-button {
            font-size: 0.75rem;
            padding: 6px 12px;
        }
    }
    </style>
</head>
<body>
<div class="block-chatbot-container">
    <div id="chat-messages" class="chat-messages">
        <div class="welcome-message">
            <div class="bot-avatar">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2Z" fill="#6366F1"/>
                    <path d="M12 6C9.79 6 8 7.79 8 10V14C8 16.21 9.79 18 12 18C14.21 18 16 16.21 16 14V10C16 7.79 14.21 6 12 6Z" fill="white"/>
                </svg>
            </div>
            <div class="message bot-message">
                {{#isteacher}}
                {{#str}}hello_professor, block_chatbot{{/str}}
                {{/isteacher}}
                {{^isteacher}}
                {{#str}}hello_student, block_chatbot{{/str}}
                {{/isteacher}}
            </div>
        </div>
    </div>
    <div id="error-message" class="error-message"></div>
    <div class="chat-input-container">
        <form id="chatform" class="chat-form">
            <input type="text" id="question" name="question"
                   class="chat-input" placeholder="{{#str}}ask_your_question_here, block_chatbot{{/str}}" required>
            <button type="submit" class="send-button">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2.01 21L23 12L2.01 3L2 10L17 12L2 14L2.01 21Z" fill="white"/>
                </svg>
            </button>
        </form>
        <div class="button-container">
            {{#isteacher}}
            <button id="toggle-prompt-form" class="prompt-button" onclick="togglePromptModal()">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z" fill="currentColor"/>
                </svg>
                {{#str}}modify_prompt, block_chatbot{{/str}}
            </button>
            <button id="toggle-file-upload-form" class="file-upload-button" onclick="toggleFileUploadModal()">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z" fill="currentColor"/>
                </svg>
                {{#str}}upload_course, block_chatbot{{/str}}
            </button>
            {{/isteacher}}
        </div>
    </div>
</div>

<script>

document.addEventListener('DOMContentLoaded', function() {
    // Éléments administratifs
    //const toggleCheckbox = document.createElement('input');
    //toggleCheckbox.type = 'checkbox';
    //toggleCheckbox.id = 'toggleButtonsCheckbox';
    //toggleCheckbox.name = 'sansRag';

    //const toggleLabel = document.createElement('label');
    //toggleLabel.className = 'toggle-buttons-checkbox';
    //toggleLabel.appendChild(toggleCheckbox);
    //toggleLabel.appendChild(document.createTextNode('Chatbot Sans RAG'));

    // Récupérer les boutons administratifs
    const promptButton = document.getElementById('toggle-prompt-form');
    const fileUploadButton = document.getElementById('toggle-file-upload-form');
    const buttonContainer = document.querySelector('.button-container');

    // Vérifier si les éléments nécessaires existent
    if (buttonContainer && promptButton && fileUploadButton) {
        // Insérer le toggle checkbox en premier dans le conteneur de boutons
        //buttonContainer.insertBefore(toggleLabel, buttonContainer.firstChild);

        // Récupérer l'état précédent du localStorage
        //const isButtonsHidden = localStorage.getItem('buttonsHidden') === 'true';
        
        // Fonction pour mettre à jour la visibilité des boutons
        /*function updateButtonVisibility(hidden) {
            if (hidden) {
                promptButton.style.display = 'none';
                fileUploadButton.style.display = 'none';
                promptButton.disabled = true;
                fileUploadButton.disabled = true;
            } else {
                promptButton.style.display = '';
                fileUploadButton.style.display = '';
                promptButton.disabled = false;
                fileUploadButton.disabled = false;
            }
            
            // Enregistrer l'état dans localStorage
            localStorage.setItem('buttonsHidden', hidden);
        }*/

        // Définir l'état initial de la case à cocher
        //toggleCheckbox.checked = isButtonsHidden;

        // Appliquer l'état initial
        //updateButtonVisibility(isButtonsHidden);

        // Ajouter un écouteur d'événements pour les changements futurs
        /*toggleCheckbox.addEventListener('change', function() {
            updateButtonVisibility(this.checked);
        });*/
    }
});

// Conserver les fonctions originales
function togglePromptModal() {
    console.log('{{#str}}open_prompt_modal, block_chatbot{{/str}}');
}

function toggleFileUploadModal() {
    console.log('{{#str}}open_file_upload_modal, block_chatbot{{/str}}');
}

</script>
</body>
</html>
